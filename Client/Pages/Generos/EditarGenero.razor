@page "/generos/editar/{GeneroId:int}"
@inject NavigationManager navigationManager
@inject IRepositorio repositorio
@inject SweetAlertService swal

<h3>EditarGenero</h3>

@if (Genero is null){
    <p>Cargando...</p>
}
else{
    <FormularioGenero @ref="formularioGenero" Genero="Genero" OnValidSubmit="Editar" />
}

@code {
    [Parameter] public int GeneroId { get; set; }
    private Genero? Genero;
    private FormularioGenero? formularioGenero;


    protected override async Task OnInitializedAsync()
    {
        var respuestaHTTP = await repositorio.Get<Genero>($"api/generos/{GeneroId}");

    if (respuestaHTTP.Error)
        {
            if(respuestaHTTP.HttpResponseMessage.StatusCode == System.Net.HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("generos");
            }
            else
            {
                var mensajeError = await respuestaHTTP.ObtenerMensajeError();
                await swal.FireAsync("Error", mensajeError, SweetAlertIcon.Error);
            }
        } 
        else
        {
            Genero = respuestaHTTP.Response;
        }
    }

    private void Editar()
    {
        formularioGenero!.FormularioPosteadoConExito = true;
        Console.WriteLine("Editando Género de Película");
        Console.WriteLine($"Id: {Genero!.Id}");
        Console.WriteLine($"Nombre: {Genero.Nombre}");
        navigationManager.NavigateTo("generos");
    }
}
